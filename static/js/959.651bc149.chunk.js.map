{"version":3,"file":"static/js/959.651bc149.chunk.js","mappings":"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","sources":["../node_modules/@mui/private-theming/useTheme/ThemeContext.js","../node_modules/@mui/private-theming/useTheme/useTheme.js","../node_modules/@mui/private-theming/ThemeProvider/nested.js","../node_modules/@mui/private-theming/ThemeProvider/ThemeProvider.js","../node_modules/@mui/system/esm/ThemeProvider/ThemeProvider.js","../node_modules/@mui/material/styles/ThemeProvider.js","pages/Register.jsx"],"sourcesContent":["import * as React from 'react';\nconst ThemeContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== 'production') {\n  ThemeContext.displayName = 'ThemeContext';\n}\nexport default ThemeContext;","import * as React from 'react';\nimport ThemeContext from './ThemeContext';\nexport default function useTheme() {\n  const theme = React.useContext(ThemeContext);\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useDebugValue(theme);\n  }\n  return theme;\n}","const hasSymbol = typeof Symbol === 'function' && Symbol.for;\nexport default hasSymbol ? Symbol.for('mui.nested') : '__THEME_NESTED__';","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { exactProp } from '@mui/utils';\nimport ThemeContext from '../useTheme/ThemeContext';\nimport useTheme from '../useTheme';\nimport nested from './nested';\n\n// To support composition of theme.\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction mergeOuterLocalTheme(outerTheme, localTheme) {\n  if (typeof localTheme === 'function') {\n    const mergedTheme = localTheme(outerTheme);\n    if (process.env.NODE_ENV !== 'production') {\n      if (!mergedTheme) {\n        console.error(['MUI: You should return an object from your theme function, i.e.', '<ThemeProvider theme={() => ({})} />'].join('\\n'));\n      }\n    }\n    return mergedTheme;\n  }\n  return _extends({}, outerTheme, localTheme);\n}\n\n/**\n * This component takes a `theme` prop.\n * It makes the `theme` available down the React tree thanks to React context.\n * This component should preferably be used at **the root of your component tree**.\n */\nfunction ThemeProvider(props) {\n  const {\n    children,\n    theme: localTheme\n  } = props;\n  const outerTheme = useTheme();\n  if (process.env.NODE_ENV !== 'production') {\n    if (outerTheme === null && typeof localTheme === 'function') {\n      console.error(['MUI: You are providing a theme function prop to the ThemeProvider component:', '<ThemeProvider theme={outerTheme => outerTheme} />', '', 'However, no outer theme is present.', 'Make sure a theme is already injected higher in the React tree ' + 'or provide a theme object.'].join('\\n'));\n    }\n  }\n  const theme = React.useMemo(() => {\n    const output = outerTheme === null ? localTheme : mergeOuterLocalTheme(outerTheme, localTheme);\n    if (output != null) {\n      output[nested] = outerTheme !== null;\n    }\n    return output;\n  }, [localTheme, outerTheme]);\n  return /*#__PURE__*/_jsx(ThemeContext.Provider, {\n    value: theme,\n    children: children\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? ThemeProvider.propTypes = {\n  /**\n   * Your component tree.\n   */\n  children: PropTypes.node,\n  /**\n   * A theme object. You can provide a function to extend the outer theme.\n   */\n  theme: PropTypes.oneOfType([PropTypes.object, PropTypes.func]).isRequired\n} : void 0;\nif (process.env.NODE_ENV !== 'production') {\n  process.env.NODE_ENV !== \"production\" ? ThemeProvider.propTypes = exactProp(ThemeProvider.propTypes) : void 0;\n}\nexport default ThemeProvider;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { ThemeProvider as MuiThemeProvider, useTheme as usePrivateTheme } from '@mui/private-theming';\nimport { exactProp } from '@mui/utils';\nimport { ThemeContext as StyledEngineThemeContext } from '@mui/styled-engine';\nimport useThemeWithoutDefault from '../useThemeWithoutDefault';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst EMPTY_THEME = {};\nfunction useThemeScoping(themeId, upperTheme, localTheme, isPrivate = false) {\n  return React.useMemo(() => {\n    const resolvedTheme = themeId ? upperTheme[themeId] || upperTheme : upperTheme;\n    if (typeof localTheme === 'function') {\n      const mergedTheme = localTheme(resolvedTheme);\n      const result = themeId ? _extends({}, upperTheme, {\n        [themeId]: mergedTheme\n      }) : mergedTheme;\n      // must return a function for the private theme to NOT merge with the upper theme.\n      // see the test case \"use provided theme from a callback\" in ThemeProvider.test.js\n      if (isPrivate) {\n        return () => result;\n      }\n      return result;\n    }\n    return themeId ? _extends({}, upperTheme, {\n      [themeId]: localTheme\n    }) : _extends({}, upperTheme, localTheme);\n  }, [themeId, upperTheme, localTheme, isPrivate]);\n}\n\n/**\n * This component makes the `theme` available down the React tree.\n * It should preferably be used at **the root of your component tree**.\n *\n * <ThemeProvider theme={theme}> // existing use case\n * <ThemeProvider theme={{ id: theme }}> // theme scoping\n */\nfunction ThemeProvider(props) {\n  const {\n    children,\n    theme: localTheme,\n    themeId\n  } = props;\n  const upperTheme = useThemeWithoutDefault(EMPTY_THEME);\n  const upperPrivateTheme = usePrivateTheme() || EMPTY_THEME;\n  if (process.env.NODE_ENV !== 'production') {\n    if (upperTheme === null && typeof localTheme === 'function' || themeId && upperTheme && !upperTheme[themeId] && typeof localTheme === 'function') {\n      console.error(['MUI: You are providing a theme function prop to the ThemeProvider component:', '<ThemeProvider theme={outerTheme => outerTheme} />', '', 'However, no outer theme is present.', 'Make sure a theme is already injected higher in the React tree ' + 'or provide a theme object.'].join('\\n'));\n    }\n  }\n  const engineTheme = useThemeScoping(themeId, upperTheme, localTheme);\n  const privateTheme = useThemeScoping(themeId, upperPrivateTheme, localTheme, true);\n  return /*#__PURE__*/_jsx(MuiThemeProvider, {\n    theme: privateTheme,\n    children: /*#__PURE__*/_jsx(StyledEngineThemeContext.Provider, {\n      value: engineTheme,\n      children: children\n    })\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? ThemeProvider.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * Your component tree.\n   */\n  children: PropTypes.node,\n  /**\n   * A theme object. You can provide a function to extend the outer theme.\n   */\n  theme: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).isRequired,\n  /**\n   * The design system's unique id for getting the corresponded theme when there are multiple design systems.\n   */\n  themeId: PropTypes.string\n} : void 0;\nif (process.env.NODE_ENV !== 'production') {\n  process.env.NODE_ENV !== \"production\" ? ThemeProvider.propTypes = exactProp(ThemeProvider.propTypes) : void 0;\n}\nexport default ThemeProvider;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"theme\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { ThemeProvider as SystemThemeProvider } from '@mui/system';\nimport THEME_ID from './identifier';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function ThemeProvider(_ref) {\n  let {\n      theme: themeInput\n    } = _ref,\n    props = _objectWithoutPropertiesLoose(_ref, _excluded);\n  const scopedTheme = themeInput[THEME_ID];\n  return /*#__PURE__*/_jsx(SystemThemeProvider, _extends({}, props, {\n    themeId: scopedTheme ? THEME_ID : undefined,\n    theme: scopedTheme || themeInput\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? ThemeProvider.propTypes = {\n  /**\n   * Your component tree.\n   */\n  children: PropTypes.node,\n  /**\n   * A theme object. You can provide a function to extend the outer theme.\n   */\n  theme: PropTypes.oneOfType([PropTypes.object, PropTypes.func]).isRequired\n} : void 0;","import { Avatar, Box, Button, Container, CssBaseline, Grid, Link, TextField, ThemeProvider, Typography, createTheme } from '@mui/material';\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Navigate } from 'react-router-dom';\nimport { registerUserThunk } from 'redux/operations';\nimport { selectAuthentificated } from 'redux/selectors';\n\nconst RegisterPage = () => {\n  const dispatch = useDispatch();\n  const authenticated = useSelector(selectAuthentificated);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    const form = event.currentTarget;\n\n    const name = form.elements.userName.value;\n    const email = form.elements.userEmail.value;\n    const password = form.elements.userPassword.value;\n\n    dispatch(\n      registerUserThunk({\n        name,\n        email,\n        password,\n      })\n    );\n  };\n\n  if (authenticated) return <Navigate to=\"/contacts\" />;\n\n  const defaultTheme = createTheme();\n\n\n  return (\n    <ThemeProvider theme={defaultTheme}>\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <Box\n          sx={{\n            marginTop: 8,\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n          }}\n        >\n          <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n            {/* <LockOutlinedIcon /> */}\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign up\n          </Typography>\n          <Box component=\"form\" noValidate onSubmit={handleSubmit} sx={{ mt: 3 }}>\n            <Grid container spacing={2}>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  autoComplete=\"given-name\"\n                  name=\"firstName\"\n                  required\n                  fullWidth\n                  id=\"firstName\"\n                  label=\"First Name\"\n                  autoFocus\n                />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  required\n                  fullWidth\n                  id=\"lastName\"\n                  label=\"Last Name\"\n                  name=\"lastName\"\n                  autoComplete=\"family-name\"\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  required\n                  fullWidth\n                  id=\"email\"\n                  label=\"Email Address\"\n                  name=\"email\"\n                  autoComplete=\"email\"\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  required\n                  fullWidth\n                  name=\"password\"\n                  label=\"Password\"\n                  type=\"password\"\n                  id=\"password\"\n                  autoComplete=\"new-password\"\n                />\n              </Grid>\n              {/* <Grid item xs={12}>\n                <FormControlLabel\n                  control={<Checkbox value=\"allowExtraEmails\" color=\"primary\" />}\n                  label=\"I want to receive inspiration, marketing promotions and updates via email.\"\n                />\n              </Grid> */}\n            </Grid>\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 }}\n            >\n              Sign Up\n            </Button>\n            <Grid container justifyContent=\"flex-end\">\n              <Grid item>\n                <Link href=\"#\" variant=\"body2\">\n                  Already have an account? Sign in\n                </Link>\n              </Grid>\n            </Grid>\n          </Box>\n        </Box>\n      </Container>\n    </ThemeProvider>\n  );\n}\n\nexport default RegisterPage;"],"names":["React","useTheme","ThemeContext","Symbol","for","props","children","localTheme","theme","outerTheme","output","_extends","mergeOuterLocalTheme","nested","_jsx","value","EMPTY_THEME","useThemeScoping","themeId","upperTheme","isPrivate","resolvedTheme","mergedTheme","result","useThemeWithoutDefault","upperPrivateTheme","usePrivateTheme","engineTheme","privateTheme","MuiThemeProvider","StyledEngineThemeContext","_excluded","ThemeProvider","_ref","themeInput","_objectWithoutPropertiesLoose","scopedTheme","THEME_ID","SystemThemeProvider","undefined","dispatch","useDispatch","useSelector","selectAuthentificated","to","defaultTheme","createTheme","Container","component","maxWidth","CssBaseline","Box","sx","marginTop","display","flexDirection","alignItems","Avatar","m","bgcolor","Typography","variant","noValidate","onSubmit","event","preventDefault","form","currentTarget","name","elements","userName","email","userEmail","password","userPassword","registerUserThunk","mt","Grid","container","spacing","item","xs","sm","TextField","autoComplete","required","fullWidth","id","label","autoFocus","type","Button","mb","justifyContent","Link","href"],"sourceRoot":""}