{"version":3,"file":"static/js/969.4a27149e.chunk.js","mappings":"4MAyEA,UAjEiB,WACf,IAAMA,GAAWC,EAAAA,EAAAA,IAAYC,EAAAA,IACvBC,GAAYF,EAAAA,EAAAA,IAAYG,EAAAA,IACxBC,GAAQJ,EAAAA,EAAAA,IAAYK,EAAAA,IACpBC,GAAWC,EAAAA,EAAAA,MAoBXC,EAAeC,MAAMC,QAAQX,IAAaA,EAASY,OAAS,EAClE,OACE,gCACE,kBAAMC,SAjBW,SAAAC,GACnBA,EAAMC,iBAEN,IAAMC,EAAOF,EAAMG,cAEbC,EAAOF,EAAKG,SAASC,YAAYC,MACjCC,EAASN,EAAKG,SAASI,cAAcF,MAE3C,GAAIrB,EAASwB,MAAK,SAAAC,GAAO,OAAIA,EAAQP,OAASA,CAArB,IACvB,OAAOQ,MAAM,qBAAD,OAAsBR,EAAtB,qBAEdX,GAASoB,EAAAA,EAAAA,IAAW,CAAET,KAAAA,EAAMI,OAAAA,IAC7B,EAKG,WACE,8BACE,uBAAG,WACH,kBAAOJ,KAAK,cAAcU,KAAK,OAAOC,UAAQ,QAEhD,mBACA,8BACE,uBAAG,aACH,kBAAOX,KAAK,gBAAgBU,KAAK,OAAOC,UAAQ,QAElD,mBACA,SAAC,IAAD,CAAQC,QAAQ,YAAYC,SAAS,SAArC,SAA8C,mBAG/C5B,IAAa,SAAC,IAAD,IACbE,IAAS,yBAAG,+BAA6BA,MAC1C,wBACGI,GACCT,EAASgC,KAAI,SAAAP,GACX,OACE,2BACE,0BAAI,SAAOA,EAAQP,SACnB,yBAAG,WAASO,EAAQH,WACpB,mBACEW,QAAS,kBA7CGC,EA6CuBT,EAAQU,QA5CzD5B,GAAS6B,EAAAA,EAAAA,IAAcF,IADG,IAAAA,CA6CH,EACTN,KAAK,SACL,aAAW,iBAHb,SAIC,WAPMH,EAAQU,GAYpB,QAIV,C","sources":["pages/Contacts/Contacts.jsx"],"sourcesContent":["import { useDispatch, useSelector } from 'react-redux';\n\nimport Loader from '../../components/Loader/Loader';\n\nimport { selectContacts, selectError, selectIsLoading } from 'redux/selectors';\nimport { addContact, deleteContact } from 'redux/operations';\nimport { Button } from '@mui/material';\n\nconst Contacts = () => {\n  const contacts = useSelector(selectContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const dispatch = useDispatch();\n\n  const handleDeleteContact = contactId => {\n    dispatch(deleteContact(contactId));\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    const form = event.currentTarget;\n\n    const name = form.elements.contactName.value;\n    const number = form.elements.contactNumber.value;\n\n    if (contacts.some(contact => contact.name === name))\n      return alert(`Contact with name ${name} already exists!`);\n\n    dispatch(addContact({ name, number }));\n  };\n\n  const showContacts = Array.isArray(contacts) && contacts.length > 0;\n  return (\n    <section>\n      <form onSubmit={handleSubmit}>\n        <label>\n          <p>Name:</p>\n          <input name=\"contactName\" type=\"text\" required />\n        </label>\n        <br />\n        <label>\n          <p>Number:</p>\n          <input name=\"contactNumber\" type=\"text\" required />\n        </label>\n        <br />\n        <Button variant=\"contained\" htmlType=\"submit\">Add contact</Button>\n      </form>\n\n      {isLoading && <Loader />}\n      {error && <p>Oops, some error occured... {error}</p>}\n      <ul>\n        {showContacts &&\n          contacts.map(contact => {\n            return (\n              <li key={contact.id}>\n                <h3>Name: {contact.name}</h3>\n                <p>Number: {contact.number}</p>\n                <button\n                  onClick={() => handleDeleteContact(contact.id)}\n                  type=\"button\"\n                  aria-label=\"Delete contact\"\n                >\n                  &times;\n                </button>\n              </li>\n            );\n          })}\n      </ul>\n    </section>\n  );\n};\n\nexport default Contacts;"],"names":["contacts","useSelector","selectContacts","isLoading","selectIsLoading","error","selectError","dispatch","useDispatch","showContacts","Array","isArray","length","onSubmit","event","preventDefault","form","currentTarget","name","elements","contactName","value","number","contactNumber","some","contact","alert","addContact","type","required","variant","htmlType","map","onClick","contactId","id","deleteContact"],"sourceRoot":""}