{"version":3,"file":"static/js/969.a891e222.chunk.js","mappings":"qPA2HA,UA7GiB,WACf,IAAMA,GAAkBC,EAAAA,EAAAA,IAAYC,EAAAA,IAC9BC,GAAWF,EAAAA,EAAAA,IAAYG,EAAAA,IACvBC,GAAYJ,EAAAA,EAAAA,IAAYK,EAAAA,IACxBC,GAAQN,EAAAA,EAAAA,IAAYO,EAAAA,IAC1B,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KAEMC,GAAWC,EAAAA,EAAAA,OAMjBC,EAAAA,EAAAA,YAAU,WACHhB,GACLc,GAASG,EAAAA,EAAAA,MACV,GAAE,CAACjB,EAAiBc,IAErB,IAAMI,EAAe,SAAAC,GACnB,OAAQA,EAAEC,OAAOV,MACf,IAAK,OACHC,EAAQQ,EAAEC,OAAOC,OACjB,MACF,IAAK,SACHR,EAAUM,EAAEC,OAAOC,OACnB,MACF,QACE,OAEL,EAaKC,EAAeC,MAAMC,QAAQrB,IAAaA,EAASsB,OAAS,EAClE,OACE,UAAC,IAAD,YACE,kBAAMC,SAdW,SAAAC,GAGnB,GAFAA,EAAMC,iBAEFzB,EAAS0B,MAAK,SAAAC,GAAO,OAAIA,EAAQpB,OAASA,CAArB,IACvB,OAAOqB,MAAM,qBAAD,OAAsBrB,EAAtB,qBAEdI,GAASkB,EAAAA,EAAAA,IAAW,CAAEtB,KAAAA,EAAME,OAAAA,KAC5BD,EAAQ,IACRE,EAAU,GACX,EAKG,WACE,8BACE,uBAAG,WACH,SAAC,IAAD,CACEoB,WAAS,EACTC,MAAM,OACNC,GAAG,YACHC,SAAUlB,EACVG,MAAOX,EACPA,KAAK,OACL2B,KAAK,OACLC,UAAQ,QAGZ,mBACA,8BACE,uBAAG,aACH,SAAC,IAAD,CACEL,WAAS,EACTC,MAAM,SACNC,GAAG,YACHC,SAAUlB,EACVG,MAAOT,EACPF,KAAK,SACL2B,KAAK,OACLC,UAAQ,QAGZ,mBACA,SAAC,IAAD,CACEC,MAAO,CAAEC,UAAW,OAAQC,QAAS,cACrCC,KAAK,QACLC,QAAQ,YACRN,KAAK,SAJP,SAKC,mBAKFhC,IAAa,SAAC,IAAD,IACbE,IAAS,yBAAG,+BAA6BA,MAC1C,wBACGe,GACCnB,EAASyC,KAAI,SAAAd,GACX,OACE,2BACE,0BAAI,SAAOA,EAAQpB,SACnB,yBAAG,WAASoB,EAAQlB,WACpB,SAAC,IAAD,CACEiC,QAAS,kBArFGC,EAqFuBhB,EAAQK,QApFzDrB,GAASiC,EAAAA,EAAAA,IAAcD,IADG,IAAAA,CAqFH,EACTT,KAAK,SACLM,QAAQ,WAHV,SAIC,aAPMb,EAAQK,GAYpB,QAIV,C","sources":["pages/Contacts/Contacts.jsx"],"sourcesContent":["import { useDispatch, useSelector } from 'react-redux';\n\nimport Loader from '../../components/Loader/Loader';\n\nimport {\n  selectAuthentificated,\n  selectContacts,\n  selectError,\n  selectIsLoading,\n} from 'redux/selectors';\nimport { addContact, deleteContact, fetchAllContacts } from 'redux/operations';\nimport { Button, Container, TextField } from '@mui/material';\nimport { useEffect, useState } from 'react';\n\nconst Contacts = () => {\n  const authentificated = useSelector(selectAuthentificated);\n  const contacts = useSelector(selectContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const dispatch = useDispatch();\n\n  const handleDeleteContact = contactId => {\n    dispatch(deleteContact(contactId));\n  };\n\n  useEffect(() => {\n    if (!authentificated) return;\n    dispatch(fetchAllContacts());\n  }, [authentificated, dispatch]);\n\n  const handleChange = e => {\n    switch (e.target.name) {\n      case 'name':\n        setName(e.target.value);\n        break;\n      case 'number':\n        setNumber(e.target.value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (contacts.some(contact => contact.name === name))\n      return alert(`Contact with name ${name} already exists!`);\n\n    dispatch(addContact({ name, number }));\n    setName('');\n    setNumber('');\n  };\n\n  const showContacts = Array.isArray(contacts) && contacts.length > 0;\n  return (\n    <Container>\n      <form onSubmit={handleSubmit}>\n        <label>\n          <p>Name:</p>\n          <TextField \n            fullWidth \n            label=\"Name\" \n            id=\"fullWidth\"\n            onChange={handleChange}\n            value={name}\n            name=\"name\"\n            type=\"text\"\n            required\n          />\n        </label>\n        <br />\n        <label>\n          <p>Number:</p>\n          <TextField \n            fullWidth \n            label=\"Number\" \n            id=\"fullWidth\"            \n            onChange={handleChange}\n            value={number}\n            name=\"number\"\n            type=\"text\"\n            required\n          />\n        </label>\n        <br />\n        <Button\n          style={{ marginTop: '20px', padding: '10px, 20px' }}\n          size=\"large\"\n          variant=\"contained\"\n          type=\"submit\"\n        >\n          Add contact\n        </Button>\n      </form>\n\n      {isLoading && <Loader />}\n      {error && <p>Oops, some error occured... {error}</p>}\n      <ul>\n        {showContacts &&\n          contacts.map(contact => {\n            return (\n              <li key={contact.id}>\n                <h3>Name: {contact.name}</h3>\n                <p>Number: {contact.number}</p>\n                <Button\n                  onClick={() => handleDeleteContact(contact.id)}\n                  type=\"button\"\n                  variant=\"outlined\"\n                >\n                  Delete\n                </Button>\n              </li>\n            );\n          })}\n      </ul>\n    </Container>\n  );\n};\n\nexport default Contacts;\n"],"names":["authentificated","useSelector","selectAuthentificated","contacts","selectContacts","isLoading","selectIsLoading","error","selectError","useState","name","setName","number","setNumber","dispatch","useDispatch","useEffect","fetchAllContacts","handleChange","e","target","value","showContacts","Array","isArray","length","onSubmit","event","preventDefault","some","contact","alert","addContact","fullWidth","label","id","onChange","type","required","style","marginTop","padding","size","variant","map","onClick","contactId","deleteContact"],"sourceRoot":""}